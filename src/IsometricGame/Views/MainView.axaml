<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="clr-namespace:Isometric.ViewModels"
		     xmlns:skia="clr-namespace:Avalonia.Controls.Skia;assembly=Avalonia.Controls.Skia"
			 xmlns:infrastructure="clr-namespace:Isometric.Infrastructure"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             x:Class="Isometric.Views.MainView"
			 x:DataType="vm:GameBoard">

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
         to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:MainViewModel />
	</Design.DataContext>

	<UserControl.Styles>
		<Style Selector="ItemsControl > ContentPresenter" x:DataType="vm:GameObject">
			<Setter Property="Canvas.Left" Value="{Binding Location.X}" />
			<Setter Property="Canvas.Top" Value="{Binding Location.Y}" />
			<Setter Property="ZIndex" Value="{Binding Converter={x:Static infrastructure:ZIndexConverter.Instance }}" />
		</Style>
	</UserControl.Styles>
	<ItemsControl
	  ItemsSource="{Binding GameObjects}"
	  Width="{Binding Width, Converter={x:Static infrastructure:CellToScreenConverter.Instance}, Mode=OneWay}"
	  Height="{Binding Height, Converter={x:Static infrastructure:CellToScreenConverter.Instance}, Mode=OneWay}">

		<ItemsControl.ItemsPanel>
			<ItemsPanelTemplate>
				<Canvas/>
			</ItemsPanelTemplate>
			
			
		</ItemsControl.ItemsPanel>

		<ItemsControl.DataTemplates>
			<DataTemplate DataType="{x:Type vm:TerrainTile}">
				<Image>
					<Image.Source>
						<MultiBinding Converter="{x:Static infrastructure:TerrainTileMultiConverter.Instance}">
							<Binding Path="."></Binding>
							<Binding Path="$self"></Binding>
						</MultiBinding>
					</Image.Source>
					</Image>
			</DataTemplate>

			<DataTemplate DataType="{x:Type vm:Player}">
				<Border ClipToBounds="False">
					<Border.Styles>
						<Style Selector="Border">
							<Style.Animations>
								<Animation Duration="0:0:1"
										   IterationCount="Infinite"
										   PlaybackDirection="Alternate"
										   Easing="SineEaseInOut"
										   FillMode="None">
									<KeyFrame Cue="70%">
										<Setter Property="ScaleTransform.ScaleX" Value="1.2" />
										<Setter Property="ScaleTransform.ScaleY" Value="1.2" />
									</KeyFrame>
									<KeyFrame Cue="90%">
										<Setter Property="ScaleTransform.ScaleX" Value="1.5" />
										<Setter Property="ScaleTransform.ScaleY" Value="1.5" />
									</KeyFrame>
								</Animation>
								<Animation Duration="0:0:2"
										   IterationCount="Infinite"
										   PlaybackDirection="Alternate"
										   FillMode="None">
									<KeyFrame Cue="30%">
										<Setter Property="RotateTransform.Angle" Value="-45" />
									</KeyFrame>
									<KeyFrame Cue="90%">
										<Setter Property="RotateTransform.Angle" Value="45" />
									</KeyFrame>
								</Animation>

							</Style.Animations>
						</Style>
					</Border.Styles>
					<Image Width="32" Height="32"
						   Source="/Assets/Player.png"
						   RenderTransform="{Binding Facing, Converter={x:Static infrastructure:DirectionToMatrixConverter.Instance}}" />
				</Border>
			</DataTemplate>
			<DataTemplate DataType="{x:Type vm:Tank}">
				<Image Width="32" Height="32" Source="/Assets/Tank.png"
					   RenderTransform="{Binding Facing, Converter={x:Static infrastructure:DirectionToMatrixConverter.Instance}}" />
			</DataTemplate>
		</ItemsControl.DataTemplates>
	</ItemsControl>
	
	
	
	<!--<TextBlock Text="{Binding Greeting}" HorizontalAlignment="Center" VerticalAlignment="Center"/>-->
</UserControl>
